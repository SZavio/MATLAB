clc, close all, clear all;


% Método de Eliminação de Gauss com verificação de pivôs em MATLAB

% Resolver o sistema de equações lineares: (Exemplo)
% x1 + x2  - x3 - x4 = 0
% x1 + x2 + x3 + 3x4 = 2
% x1 + 3x2 + x3 + 7x4 = -1

%substitua o sistema na matriz:

% Coeficientes da matriz ampliada (A|b)
A = [1 1 -1 -1 0
    1 1 1 3 2
    2 -1 -1 -1 0
    1 3 1 7 -1];

% Número de equações
n = size(A, 1);

% Eliminação para transformar a matriz em forma triangular superior
for k = 1:n-1
    % Verificar se o pivô é zero ou próximo de zero
    if abs(A(k, k)) < 1e-10
        % Procurar uma linha abaixo para trocar
        for j = k+1:n
            if abs(A(j, k)) > 1e-10
                temp = A(k, :);
                A(k, :) = A(j, :);
                A(j, :) = temp;
                break;
            end
        end
        if abs(A(k, k)) < 1e-10
            error('O sistema é singular ou indeterminado.');
        end
    end
    % Eliminação
    for i = k+1:n
        fator = A(i, k) / A(k, k);
        A(i, :) = A(i, :) - fator * A(k, :);
    end
end

% Substituição regressiva para resolver o sistema
x = zeros(n, 1);
x(n) = A(n, end) / A(n, n);
for i = n-1:-1:1
    x(i) = (A(i, end) - A(i, i+1:n) * x(i+1:n)) / A(i, i);
end

% Resultado
fprintf('A solução do sistema é:\n');
for i = 1:n
    fprintf('x%d = %.1f\n', i, x(i));
end
